Given some text we can split it into geometric pieces (rectangles or squares), 
based on what can be called a 'Split Pattern', the pieces of the text can then
be stored in more than one files. 

Example: Given the text "HELLO, WORLD!"

The following Split Pattern
AB

would generate two files A.txt and B.txt each one containing the following.
A.txt
 HELLO,

B.txt
 WORLD!

The split pattern 
AB
AB

would generate two files A.txt and B.txt each one containing the following.
A.txt
 HEL
 WOR

B.txt
 LO,
 LD!

Thus, the split pattern dictates how the data is "reshaped" as well as the
geometric dimensions.

The split pattern
ABC
ABC

Would result in three files A.txt, B.txt and C.txt containing the following.
A.txt
 HE 
 WO

B.txt
 LL 
 RL 

C.txt
 O,
 D!

For multi line inputs, the whole block of text is considered as the subject
for the Split Pattern.
Thus the text "HELLO, WORLD!\nI AM SO HAPPY"
Using the Split Pattern

ABB
CCC

Would result in three files (A.txt B.txt and C.txt) containing

A.txt
 HELLO

B.txt
 , WORLD!

C.txt
 I AM SO HAPPY

Write a program - that given a piece of text, will split it into the appropriate
amount of files according to a given Split Pattern.

The rules for the Split Pattern are

* No same letters may appear with another letter in between. 
  Thus, this is a legal pattern
  AB
  AB
  AB

  and this is NOT a legal pattern
  AB
  CB
  AB

* A letter chain must never start further to the right than a consecutive chain 
  of the same letters.
  Thus, this is a legal pattern
  AAA
  ABB

  and this is NOT a legal pattern
  AAA
  ABB
  BBB


* The split pattern must be an non-jagged matrix.
  Thus, this is a legal pattern
  ABB
  CCC

  and this is NOT a legal pattern
  ABB
  CC

The same program shall also be able to reconstruct the text from the given files
and the split pattern.

You shall of course also have pattern validation for your program.
